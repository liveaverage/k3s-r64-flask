apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "8"
  creationTimestamp: null
  generation: 1
  labels:
    run: flask-green
  name: flask-green
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      run: flask-green
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: flask-green
    spec:
      nodeSelector:
        led: green
      containers:
      - image: registry.gitlab.com/liveaverage/k3s-r64-flask:latest
        imagePullPolicy: Always
        name: flask-green
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        securityContext:
          capabilities: {}
          privileged: true
          procMount: Default
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /sys
          name: sysgpio
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /sys
          type: ""
        name: sysgpio

---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: flask-green
  name: flask-green
  selfLink: /api/v1/namespaces/default/services/flasknodeport
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: flask-green
  sessionAffinity: None

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: flask-ingress-green
spec:
  rules:
    - host: flask-green.192.168.1.222.xip.io
      http:
        paths:
          - path: /
            backend:
              serviceName: flask-green
              servicePort: 8080

